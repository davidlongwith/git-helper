(this["webpackJsonpgit-helper"]=this["webpackJsonpgit-helper"]||[]).push([[0],[,,,,,,function(e){e.exports=JSON.parse('[{"name":"Command Line","commands":[{"code":"pwd","description":"print working directory - shows what directory you are in"},{"code":"ls","description":"list the files in this directory"},{"code":"ls -a","description":"list files and show hidden files/folders"},{"code":"cd my-project/","description":"change directories to the my-project directory"},{"code":"cd \\"/c/Program Files/\\"","description":"use double quotes on entire path for names with spaces"},{"code":"cd ../","description":"navigate up one level"},{"code":"cd ~","description":"change directories to your home directory"},{"code":"q","description":"quit/end and return to prompt"},{"code":"ctrl + c","description":"close active server process"}]},{"name":"Git","commands":[{"code":"git --version","description":"check git version"},{"code":"git status","description":"show git repository status"},{"code":"git [command] --help","description":"opens detailed help file in browser"}]},{"name":"Git Config","commands":[{"code":"git config --list","description":"list configuration settings"},{"code":"git config --user.name \\"Dave\\"","description":"set Git username (single repository)"},{"code":"git config --global","description":"option to affect this and all future commits (but not past commits)"},{"code":"git config --global user.name","description":"show global user name"},{"code":"git config --global user.name \\"David Longwith\\"","description":"set Git username for all future commits"},{"code":"git config --global user.email none@none.com","description":"set global email"},{"code":"git config color.ui auto","description":"add color to diff results for readability"},{"code":"git config --system core.longpaths true","description":"allow longer path names (Windows)"}]},{"name":"Git Log","commands":[{"code":"git log","description":"list all commits for current directory (press \\"q\\" to quit)"},{"code":"git log --stat","description":"gives statistics about which files have changed (\\"q\\" to quit)"},{"code":"git log --graph [branch]","description":"visual representation of the commit history for specified branch(s)"},{"code":"git log --oneline","description":"make things easier to read all on one line"},{"code":"git log -n [quantity]","description":"show specified number of commits"}]},{"name":"Git Init","commands":[{"code":"git init","description":"initialize a git repository in current directory (adds .git hidden folder meta data)"}]},{"name":"Git Clone","commands":[{"code":"git clone [url]","description":"move an entire repository from one computer to another"}]},{"name":"Git Add","commands":[{"code":"git add [file]","description":"add file to track with next commit (relative to current directory, adds to staging area)"},{"code":"git add .","description":"add everything to staging area"}]},{"name":"Git Diff","commands":[{"code":"git diff","description":"show changes in working directory compared to staging area"},{"code":"git diff --staged","description":"compare staging area to repository commit"},{"code":"git diff [id] [id]","description":"compare two commits by id (can use first 4 characters instead of whole thing)"}]},{"name":"Git RM","commands":[{"code":"git rm [file]","description":"removes the file from working directory and stages deletion"}]},{"name":"Git Commit","commands":[{"code":"git commit","description":"commit to repository (opens default text editor for message/details input)"},{"code":"git commit -m \\"Commit Message\\"","description":"commit to repository with message from the command line"}]},{"name":"Git Show","commands":[{"code":"git show [commit id]","description":"show changes introduced to a commit (without knowing what the parent is)"}]},{"name":"Git Reset","commands":[{"code":"git reset","description":"move file in commit staging area back to working directory (undo a git add)"},{"code":"git reset --hard","description":"discards any changes in both the working directory and staging area"},{"code":"git reset --hard [commit_id]","description":"reset head back to desired commit, discarding all commits after this one"}]},{"name":"Git Checkout","commands":[{"code":"git checkout [commit id]","description":"switch to another commit in current branch"},{"code":"git checkout [branch]","description":"switch to most recent commit on specified branch \\"git checkout master\\""},{"code":"git checkout -b [new_branch_name]","description":"shortcut command for creating and switching to a new branch with checkout"}]},{"name":"Git Branch","commands":[{"code":"git branch","description":"list branches and star selected (use checkout to switch)"},{"code":"git branch [myNewBranch]","description":"create a new branch"},{"code":"git branch -d [branch name]","description":"delete branch label (make sure commits are reachable by another branch label first)"}]},{"name":"Git Merge","commands":[{"code":"git merge [branch(s)]","description":"create a new commit merging selected branches (currently checked out branch is always included)"},{"code":"git merge --abort","description":"restore files to their state before starting the merge"}]},{"name":"Git Remote","commands":[{"code":"git remote","description":"show all remotes"},{"code":"git remote -v","description":"verbose, show more information (url\'s for push/pull)"},{"code":"git remote add [name] [url]","description":"add repository on GitHub as a remote (standard to use \\"origin\\" as name when using single remote)"},{"code":"git remote rm [remote]","description":"remove specified remote"}]},{"name":"Git Push","commands":[{"code":"git push","description":"uploads all local branch commits to GitHub"},{"code":"git push [remote] [branch]","description":"\\"git push origin master\\" sends the master branch to the remote named origin on GitHub"},{"code":"git push -u [remote] [branch]","description":"set upstream tracking reference (links local and remote allowing argument-less commands such as git pull)"}]},{"name":"Git Pull","commands":[{"code":"git [remote] [branch]","description":"download the specified branch to local repository (Github > Local)"}]},{"name":"Git Fetch","commands":[{"code":"git fetch [remote]","description":"downloads all history from remote tracking branches"}]}]')},,,function(e,t,o){e.exports=o(18)},,,,,function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){"use strict";o.r(t);var i=o(0),n=o.n(i),r=o(2),a=o.n(r),c=(o(14),o(15),o(16),o(17),function(e){var t=e.sectionName;return n.a.createElement("li",null,n.a.createElement("a",{className:"quick-link",href:"#".concat(t.toLowerCase().replace(/ /g,"-"))},t))}),s=function(e){var t=e.sections;return n.a.createElement("nav",{id:"quick-link-navigation"},n.a.createElement("ul",null,t.map((function(e,t){return n.a.createElement(c,{key:t,sectionName:e.name})}))))},d=function(e){var t=e.code,o=e.description;return n.a.createElement("div",{className:"command"},n.a.createElement("div",{className:"command-code"},n.a.createElement("code",null,t)),n.a.createElement("div",{className:"command-descrip"},n.a.createElement("p",null,o)))},m=function(e){var t=e.name,o=e.commands;return n.a.createElement("section",{id:t.toLowerCase().replace(/ /g,"-"),className:"command-group"},n.a.createElement("h2",null,t),n.a.createElement("div",null,o.map((function(e,t){return n.a.createElement(d,Object.assign({key:t},e))}))))},l=function(e){var t=e.commandData;return n.a.createElement("div",{className:"commands"},t.map((function(e,t){return n.a.createElement(m,Object.assign({key:t},e))})))},g=o(3),u=o(4),h=o(7),p=o(5),f=o(8),w=function(e){function t(e){var o;return Object(g.a)(this,t),(o=Object(h.a)(this,Object(p.a)(t).call(this,e))).state={is_visible:!1},o}return Object(f.a)(t,e),Object(u.a)(t,[{key:"componentDidMount",value:function(){var e=this;document.addEventListener("scroll",(function(t){e.toggleVisibility()}))}},{key:"toggleVisibility",value:function(){window.pageYOffset>300?this.setState({is_visible:!0}):this.setState({is_visible:!1})}},{key:"scrollToTop",value:function(){window.scrollTo({top:0,behavior:"smooth"})}},{key:"render",value:function(){var e=this,t=this.state.is_visible;return n.a.createElement("div",{className:"scroll-top-button-div"},t&&n.a.createElement("button",{className:"scroll-top-button",onClick:function(){return e.scrollToTop()}},n.a.createElement("i",{className:"i-arrow-up"},n.a.createElement("svg",{role:"img","aria-labelledby":"arrowUpIcon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 48.77 25.39"},n.a.createElement("title",{id:"arrowUpIcon"},"arrow-up"),n.a.createElement("g",{"data-name":"Layer 2"},n.a.createElement("g",{"data-name":"Layer 1"},n.a.createElement("path",{d:"M47.77,25.39a1,1,0,0,1-.71-.29L24.39,2.41,1.71,25.09A1,1,0,0,1,.29,23.68L23.68.29a1,1,0,0,1,1.41,0L48.48,23.68a1,1,0,0,1-.71,1.71Z"})))))))}}]),t}(i.Component);var b=function(e){var t=e.commandsByGroupArray;return n.a.createElement("div",{className:"app"},n.a.createElement("header",{className:"app-header"},n.a.createElement("h1",null,"Git Helper")),n.a.createElement(s,{sections:t}),n.a.createElement(l,{commandData:t}),n.a.createElement(w,null))},v=o(6),y=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function k(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var o=e.installing;null!=o&&(o.onstatechange=function(){"installed"===o.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}a.a.render(n.a.createElement(b,{commandsByGroupArray:v}),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/git-helper",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat("/git-helper","/service-worker.js");y?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(o){var i=o.headers.get("content-type");404===o.status||null!=i&&-1===i.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):k(e,t)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):k(t,e)}))}}()}],[[9,1,2]]]);
//# sourceMappingURL=main.7f228e2a.chunk.js.map